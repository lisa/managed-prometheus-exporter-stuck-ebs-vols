apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: stuck-ebs-vols
  namespace: openshift-monitoring
  labels:
    name: stuck-ebs-vols
spec:
  replicas: 1
  selector:
    name: stuck-ebs-vols
  template:
    metadata:
      name: sre-stuck-ebs-volume
      labels:
        name: stuck-ebs-vols
    spec:
      initContainers:
      - name: setupcreds
        image: quay.io/lseelye/yq-kubectl:$INIT_IMAGE_VERSION
        command: [ "/usr/local/bin/init.py", "-r", "/secrets/aws/config.ini", "-a", "/rawsecrets/aws_access_key_id", "-A", "/rawsecrets/aws_secret_access_key", "-o", "/secrets/aws/credentials.ini", "-c", "/config/env/CLUSTERID" ]
        volumeMounts:
        - name: awsrawcreds
          mountPath: /rawsecrets
          readOnly: true
        - name: secrets
          mountPath: /secrets
        - name: envfiles
          mountPath: /config
      containers:
      - name: "main"
        command: [ "/bin/sh", "/monitor/start.sh" ]
        workingDir: /monitor
        ports:
        - containerPort: 8080
          protocol: "TCP"
        image: 'quay.io/jupierce/openshift-python-monitoring:$IMAGE_VERSION'
        env:
        - name: AWS_SHARED_CREDENTIALS_FILE
          value: /secrets/aws/credentials.ini
        - name: AWS_CONFIG_FILE
          value: /secrets/aws/config.ini
        - name: PYTHONPATH
          value: /openshift-python/packages:/support/packages
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 2
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 420
          periodSeconds: 360
          timeoutSeconds: 240
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 3
          timeoutSeconds: 240
        volumeMounts:
        - name: monitor-volume
          mountPath: /monitor
          readOnly: true
        - name: envfiles
          mountPath: /config
          readOnly: true
        - name: secrets
          mountPath: /secrets
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      serviceAccountName: sre-stuck-ebs-vols
      volumes:
      # this is the source code
      - name: monitor-volume
        configMap:
          name: stuck-ebs-vols-code
      - name: awsrawcreds
        secret:
          secretName: stuck-ebs-vols-aws-credentials
      - name: secrets
        emptyDir: {}
      - name: envfiles
        emptyDir: {}
  triggers:
  - type: ConfigChange
  strategy:
    type: "Recreate"
  paused: false
